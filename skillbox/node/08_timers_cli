9. CLI программы

---------
Приложение работает, ошибок нет, все выполнено в соответствии с заданием.



В целом все отлично! Код хорошо написан, есть разделение кода и используется router, за что вам плюсик.


Ранее app.get("/") возвращал верстку html страницы, но теперь он не нужен, так как страниц в CLI-приложении нет. Перенесите серверную часть из прошлого задания и проверьте ее с помощью программы Постман. После перейдем к созданию авторизации.

    Сделайте запрос к app.get("/api/timers"). В этом руте вам нужно будет на время установить id существующего пользователя или вернуть таймеры всех пользователей.



---------------------
С параметром GET запроса вы уже работали передавая состояние таймера.

С помощью Постман добавьте значение для заголовка. Про header-ы вы можете прочитать здесь: https://developer.mozilla.org/ru/docs/Web/HTTP/Headers

      Откройте Postman и там где вы отправляете запросы есть вкладка Headers. Откройте ее и там вы увидите поле ввода. Введите туда тестовое значение и отправьте запрос. В руте выего можете получить с помощью req.get()

      http://expressjs.com/en/api.html#req.get


Теперь создайте клиентскую часть, которая будет обрабатывать переданные аргументы (логин/пароль и пр. из примеров).

      Теперь вам нужно отправить GET/POST запрос на соответсвующий рут (например: /login) с теми данными которые вы получили.
