4. Решаем базовые задачи

- trim()
-

----------
Тесты для основного задания выполняются, а вот тесты для бонусной имеют ошибки. Хотите исправить или сдать только основную часть?

-----------------
Получить и сохранить в переменную содержимое файла (readFile или readFileSync). Проверить значение этой переменной и, в случае ошибки, выйти из скрипта с помощью кода 100.

--------------

Получите точно также файл .sha256, но в этом случае код ошибки будет 101.
---------------

Создайте хеш с помощью библиотеки crypto.


-------------------

БОНУС:

Запросы к файлам в интернете всегда асинхронны.

Один из вариантов решения бонусной части - выполнить оба запроса одновременно с помощью Promise.all. И после получения файлов сравнить их.

-------------------

Можно создать логику скрипта для бонусной части так, что бы работа скрипта "замораживалась" пока не отработает сам запрос. Это можно сделать с помощью конструкции async/await:

async function fetchFileFromNet(url) {
  const file = await yourAsyncFn(url);

  return file;
}
